{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","c","alert","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACE,sBAAMC,SAda,SAACC,GACpBA,EAAEC,iBACwB,cAAtBJ,EAAWK,QACbP,GAAc,SAACQ,GAAD,OAAQ,SAAR,mBAAoBA,OAClCC,MAAM,4CACNN,EAAc,KAEVD,EAAWK,OAAOG,OAAS,IAC7BV,GAAc,SAACQ,GAAD,OAAQN,GAAR,mBAAuBM,OACrCL,EAAc,MAKlB,SACE,uBAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAnBjB,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDAE0BC,UAAWH,GAFrC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,4DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,sDAAd,SAAsEhB,IACrEoB,GAAW,mBAAGJ,UAAU,oCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEWjBgB,EApBM,WACnB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACG4C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CACEA,SAAUA,GACLA,Y,MCXjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.43c805b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handeInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() === \"conejinga\") {\r\n      setCategories((c) => [\"bunny\", ...c]);\r\n      alert(\"Te quiero mucho mi conejita 🐇\");\r\n      setInputValue(\"\");\r\n    } else {\r\n      if (inputValue.trim().length > 2) {\r\n        setCategories((c) => [inputValue, ...c]);\r\n        setInputValue(\"\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handeInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func,\r\n};\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=KoLyEesvRNNp0MTKWYeHZPzI1Wap2JMz`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    // console.log(gifs);\r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title, url}) => {\r\n    // console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s \">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__flash animate__delay-1s \" >{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash \">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory.js\";\r\nimport { GifGrid } from \"./GifGrid.js\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"evangelion\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <AddCategory setCategories={setCategories} />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid \r\n            category={category}\r\n            key={category}\r\n            />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}